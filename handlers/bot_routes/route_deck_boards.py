"""–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–æ—Å–∫–∞–º–∏"""

from aiogram import types
from aiogram.filters.callback_data import CallbackData
from aiogram.utils.keyboard import InlineKeyboardBuilder

from handlers.handler_logging import logger
from handlers.handler_nc_deck import get_boards

KBD_COLUMNS = 1


class NavigationCallback(CallbackData, prefix="nav"):
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π callback –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –¥–æ—Å–∫–∞–º –∏ —Å—Ç–µ–∫–∞–º"""

    screen: str  # 'boards_list', 'stacks_list', 'cards_list'
    target_id: int = 0  # ID –¥–æ—Å–∫–∏ –∏–ª–∏ —Å—Ç–µ–∫–∞


async def show_boards_command(message: types.Message) -> None:
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å–æ–∫ –≤ –≤–∏–¥–µ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫

    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :type message: types.Message

    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å -> /decks ->
    –ë–æ—Ç –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ —Å –¥–æ—Å–∫–∞–º–∏
    """
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–ø—Ä–æ—Å–∏–ª —Å–ø–∏—Å–æ–∫ –¥–æ—Å–æ–∫")
    decks = await get_boards()

    if not decks:
        await message.answer("‚ùå –î–æ—Å–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return

    keyboard_builder = InlineKeyboardBuilder()

    for deck in decks:
        keyboard_builder.button(
            text=f"üóÇÔ∏è {deck.title}",
            callback_data=NavigationCallback(screen="stacks_list", target_id=deck.id),
        )

    keyboard_builder.adjust(KBD_COLUMNS)

    await message.answer(
        "üóÉÔ∏è <b>–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ—Å–∫—É:</b>",
        reply_markup=keyboard_builder.as_markup(),
        parse_mode="HTML",
    )
